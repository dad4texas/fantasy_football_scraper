require_relative '../environment'

class FantasyFootballScraper::CLI

  def run
    fantasy_fb_kickoff
    make_players
    display_players
    attributes_dialogue
    display_attributes
  end


  def fantasy_fb_kickoff
            
    puts "Welcome to the Fantasy Football players Selector. If you would like see the fantasy ranking of the top 30 NFL players
    enter".green + " y".red + " if not enter".green + " n".red

      choice = gets.chomp
      
        case choice.downcase

          when 'y'  
            make_players
            
          when'n'
            
            end_program

          else
            puts dont_understand
            fantasy_fb_kickoff
      end    
  end

  def end_program
    puts "Have a Wonderful Day!".blue
    abort
  end

    BASE_PATH = "https://www.fantasypros.com/nfl/reports/leaders/"

  def make_players  #method that grabs the first page scraped info
    player_array = FantasyFootballScraper::Scraper.scrape_players(BASE_PATH)
    FantasyFootballScraper::Players.create_from_collection(player_array)

    #binding.pry
  end 
#[{:name=>"Lamar Jackson", :rank=>"1", :team=>"BAL", :fantasy_points=>"422.4", :profile_link=>"https://www.fantasypros.com/nfl/players/lamar-jackson.php"}]
#______________________________________________________________________________________________________________
  def get_attributes #gets the link associtated with the player attributes page
    attributes_array = make_players #uses the data generated by the make_players method above.
    player_link = attributes_array.map {|x| x.values[4]} # 4 is index where link value resides
    #binding.pry
  end
  
  def attributes_dialogue
    puts "Enter the rank number of a player to get detailed information" 
      choice_num = gets.strip.to_i
      @@url = get_attributes[choice_num] # this gets the player_link from get_attributes from the associated rank number 

        if choice_num < 1
          dont_understand
          attributes_dialogue

        elsif choice_num > 30
          dont_understand
          attributes_dialogue

        else
          display_attributes

        end

  end

  def dont_understand
    puts "SORRY, WRONG ANSWER PLEASE TRY AGAIN!".red  
  end

  def display_attributes
    doc = Nokogiri::HTML(open(@@url))
    puts "______________________________________________________________________________
                                                                                         ".green
    puts "#{doc.css("h1").text}".red  #players name
    puts "height:  ".blue + "#{doc.css(".bio-detail:nth-child(1)").text}"
    puts "weight:  ".blue + "#{doc.css(".bio-detail:nth-child(2)").text}"
    puts "age:  ".blue + "#{doc.css(".bio-detail:nth-child(3)").text}"
    puts "college:  ".blue +  "#{doc.css(".bio-detail:nth-child(4)").text}"
    puts "next game: ".blue + "#{doc.css("div.next-game").text}"
    puts "latest news:  ".green + "#{doc.css("p").text}" 
    puts "______________________________________________________________________________".green
    exit_or_not
  end

  def exit_or_not
    puts "Type".green + " x".red + " to exit the program".green + " or".green + " y".blue + " to get more player stats.".green
      choice_x = gets.chomp
        case choice_x.downcase

        when 'y'  
          attributes_dialogue
        
        when'x'
          end_program

        else
          puts "I DON'T UNDERSTAND YOUR ANSWER. Please try again!".red
          exit_or_not
        end
      end

  def display_players
    players = FantasyFootballScraper::Players.all
    players_minus_first_index =  players[1..30]
    players_minus_first_index.each do |player|
      puts "  Rank:".red + " #{player.rank}"
      puts "  Name:".blue + " #{player.name}"
      puts "  Team:".blue + " #{player.team}"
      puts "  Fantasy Points:  ".blue + "#{player.fantasy_points}"
      puts "  Profile Link".green + " #{player.profile_link}"
      puts "______________________________________________________________________________".green
      #binding.pry
  end
 end
end



    
